#db
spring.datasource.url=${DATABASE_URL:jdbc:postgresql://localhost:5433/proposta}
spring.datasource.username=${DATABASE_USERNAME:postgres}
spring.datasource.password=${DATABASE_PASSWORD:password}

#jpa
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

#services
client.financialAnalysis.url=${ANALISE_URL:http://localhost:9999/api/solicitacao}
client.cardResource.url=${CARTOES_URL:http://localhost:8888/api/cartoes}


#actuator
management.endpoint.health.show-details=always
info.app.name=@project.name@
info.app.version=@project.version@
info.app.description=@project.description@

#scheduler
scheduler.card.resource=30000

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/proposta}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/proposta/protocol/openid-connect/certs}

#prometheus
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoints.prometheus.enabled=true
logging.level.org.springframework.security=DEBUG

management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

# Jaeger - Habilita ou n\u00c3\u00a3o
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}

# Jaeger - Nome do servi\u00c3\u00a7o
#opentracing.jaeger.service-name=${spring.application.name}
opentracing.jaeger.service-name=${spring.application.name}

# Jaeger - Endere\u00c3\u00a7o para enviar os metadados (trace, span, etc)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}

# Jaeger - Tipo de amostragem (probabil\u00c3\u00adstico) e sua configura\u00c3\u00a7\u00c3\u00a3o (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

opentracing.spring.cloud.jdbc.enabled=false

#cryptography
proposal.cryptography.secret=${SECRET:senhasupersecreta}
